@import default_tools;

default {

    .Copy {
        SourceFiles:{
                        $(MSBuildThisFileDirectory)gdbus-daemon-generated.c;
                        $(MSBuildThisFileDirectory)gdbus-daemon-generated.h;
                        $(MSBuildThisFileDirectory)gconstructor_as_data.h";
                    };
        DestinationFolder=@"$(MSBuildThisFileDirectory)..\gio\";
    };
    .Copy {
        SourceFiles:{
                        $(MSBuildThisFileDirectory)dependencies.props;
                        $(MSBuildThisFileDirectory)dependencies.targets;
                    };
        DestinationFolder=@"$(MSBuildThisFileDirectory)..\build\win32\vs10\";
    };
        
	// ("v110, v100", "win32, x64", "Debug,Release", "Dynamic, Static, ltcg", "cdecl") => {
	("v110, v100", "win32, x64", "Debug,Release", "Dynamic", "cdecl") => {
		.PushEnvironment {};
		.LoadSystemEnvironment {};
        .SetEnvironmentFromTarget.Target = "VC_${0}_${1}";
		.Message.Text = @"



        Env:        ${0}-${1}  :  ${2}  ${3}  ${4}
        EnvExists:  $(IsEnvironmentValid)";
        
        .Exec {
            Condition="$(IsEnvironmentValid)";
            Command = @"msbuild $(MSBuildThisFileDirectory)..\build\win32\vs10\glib.sln /p:PlatformToolset=${0};Platform=${1};Configuration=${2};UsesConfigurationType=${3};CallingConvention=${4}";
        };
        
        .PopEnvironment{};
	};
	
};

deps {
    .Exec {
        Condition="Exists($(MSBuildThisFileDirectory)packages.config";
        Command = @"nuget install $(MSBuildThisFileDirectory)packages.config -x -OutputDirectory ..\packages >nul";
    };
};

clean {
    .RemoveDir.Directories = @"$(MSBuildThisFileDirectory)..\build\win32\vs10\intermediate";
};

nuke {
    .RemoveDir.Directories = @"$(MSBuildThisFileDirectory)..\build\win32\vs10\output";
};

